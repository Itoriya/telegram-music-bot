import telebot
import yt_dlp
import os
import time
from ytmusicapi import YTMusic

TOKEN = "7867908233:AAE9gISHhGZu1LBlyMxiOmcs6rvnmk_14xc"
bot = telebot.TeleBot(TOKEN)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º API YouTube Music
ytmusic = YTMusic()

# üì• –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ MP3
def download_audio(url):
    if not os.path.exists("music"):
        os.makedirs("music")  # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç

    ydl_opts = {
        'format': 'bestaudio/best',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '192',
        }],
        'outtmpl': 'music/%(title)s.%(ext)s'
    }
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = f"music/{info['title']}.mp3"
            return filename
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ: {e}")
        return None

# üöÄ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é! üöÄ")

# üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –≤ YouTube Music
@bot.message_handler(commands=['find'])
def find_music(message):
    query = message.text.replace('/find', '').strip()  # –ü–æ–ª—É—á–∞–µ–º –∑–∞–ø—Ä–æ—Å –±–µ–∑ –∫–æ–º–∞–Ω–¥—ã

    if not query:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –ø–æ—Å–ª–µ /find")
        return

    bot.send_message(message.chat.id, f"üîç –ò—â—É: {query}...")

    try:
        search_results = ytmusic.search(query, filter="songs", limit=5)

        if not search_results:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        response = "üé∂ **–í–æ—Ç —á—Ç–æ —è –Ω–∞—à—ë–ª:**\n\n"
        for i, song in enumerate(search_results, start=1):
            title = song['title']
            artist = song['artists'][0]['name']
            link = f"https://music.youtube.com/watch?v={song['videoId']}"
            response += f"{i}. [{title} - {artist}]({link})\n"

        bot.send_message(message.chat.id, response, parse_mode="Markdown")

    except Exception as e:
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º—É–∑—ã–∫–∏")
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –º—É–∑—ã–∫–∏: {e}")

# üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏ –∏–∑ YouTube
@bot.message_handler(func=lambda message: "youtube.com" in message.text or "youtu.be" in message.text)
def send_audio(message):
    bot.reply_to(message, "üéµ –ó–∞–≥—Ä—É–∂–∞—é –º—É–∑—ã–∫—É, –ø–æ–¥–æ–∂–¥–∏ 1-2 –º–∏–Ω—É—Ç—ã...")
    try:
        filepath = download_audio(message.text)
        if filepath and os.path.exists(filepath):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–∞—á–∞–ª—Å—è –ª–∏ —Ñ–∞–π–ª
            with open(filepath, 'rb') as audio:
                bot.send_audio(message.chat.id, audio)
            os.remove(filepath)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        else:
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—á—Ç–æ–±—ã –±–æ—Ç –Ω–µ –ø–∞–¥–∞–ª)
@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    try:
        bot.reply_to(message, "–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É üòï")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# üîÑ –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–∏ —Å–±–æ–µ
while True:
    try:
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç –∫–æ–º–∞–Ω–¥—ã!")
        bot.polling(none_stop=True, timeout=60)
    except Exception as e:
        print(f"–°–±–æ–π –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
        time.sleep(5)  # –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
