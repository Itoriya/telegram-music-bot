import telebot
import yt_dlp
import os
import time
from ytmusicapi import YTMusic
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

TOKEN = "7867908233:AAE9gISHhGZu1LBlyMxiOmcs6rvnmk_14xc"
bot = telebot.TeleBot(TOKEN)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º API YouTube Music
ytmusic = YTMusic()

# üì• –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ MP3 (320kbps)
def download_audio(url):
    if not os.path.exists("music"):
        os.makedirs("music")  # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç

    ydl_opts = {
        'format': 'bestaudio/best',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '320',
        }],
        'outtmpl': 'music/%(title)s.%(ext)s'
    }
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = f"music/{info['title']}.mp3"
            return filename
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ: {e}")
        return None

# üöÄ –ö–Ω–æ–ø–∫–∏ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
@bot.message_handler(commands=['start'])
def send_welcome(message):
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("üîç –ù–∞–π—Ç–∏ –º—É–∑—ã–∫—É", callback_data="find_music"),
        InlineKeyboardButton("üéµ –°–∫–∞—á–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ", callback_data="download_music")
    )
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    if call.data == "find_music":
        bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –ø–æ—Å–ª–µ /find")
    elif call.data == "download_music":
        bot.send_message(call.message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube")

# üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ —Ç—Ä–µ–∫–∞
@bot.message_handler(commands=['find'])
def find_music(message):
    query = message.text.replace('/find', '').strip()

    if not query:
        bot.send_message(message.chat.id, "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –ø–æ—Å–ª–µ /find")
        return

    bot.send_message(message.chat.id, f"üîç –ò—â—É: {query}...")

    try:
        search_results = ytmusic.search(query, filter="songs", limit=10)  # –£–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ 10 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤

        if not search_results:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return

        keyboard = InlineKeyboardMarkup()
        for song in search_results:
            title = song['title']
            artist = song['artists'][0]['name']
            video_id = song.get('videoId')

            if video_id:
                button_text = f"{title} - {artist}"
                keyboard.add(InlineKeyboardButton(button_text, callback_data=f"download_{video_id}"))

        bot.send_message(message.chat.id, "üé∂ –í—ã–±–µ—Ä–∏ –ø–µ—Å–Ω—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:", reply_markup=keyboard)

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")

# üì• –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç—Ä–µ–∫–∞
@bot.callback_query_handler(func=lambda call: call.data.startswith("download_"))
def handle_download(call):
    video_id = call.data.replace("download_", "")
    youtube_url = f"https://music.youtube.com/watch?v={video_id}"

    bot.send_message(call.message.chat.id, "‚è≥ –ó–∞–≥—Ä—É–∂–∞—é –º—É–∑—ã–∫—É...")

    filepath = download_audio(youtube_url)

    if filepath and os.path.exists(filepath):
        with open(filepath, 'rb') as audio:
            bot.send_audio(call.message.chat.id, audio)
        os.remove(filepath)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    else:
        bot.send_message(call.message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ.")

# üîÑ –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–∏ —Å–±–æ–µ
while True:
    try:
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç –∫–æ–º–∞–Ω–¥—ã!")
        bot.polling(none_stop=True, timeout=60)
    except Exception as e:
        print(f"‚ö†Ô∏è –°–±–æ–π –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
        time.sleep(5)  # –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
