import telebot
import yt_dlp
import os
import time
from ytmusicapi import YTMusic
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

TOKEN = "7867908233:AAE9gISHhGZu1LBlyMxiOmcs6rvnmk_14xc"
bot = telebot.TeleBot(TOKEN)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º API YouTube Music
ytmusic = YTMusic()

# üì• –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ –≤ MP3 (320kbps)
def download_audio(url):
    if not os.path.exists("music"):
        os.makedirs("music")  # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç

    ydl_opts = {
        'format': 'bestaudio/best',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '320',
        }],
        'outtmpl': 'music/%(title)s.%(ext)s'
    }
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = f"music/{info['title']}.mp3"
            return filename
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞—É–¥–∏–æ: {e}")
        return None

# üöÄ –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
def main_keyboard():
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("üîç –ù–∞–π—Ç–∏ –º—É–∑—ã–∫—É"), KeyboardButton("üéµ –°–∫–∞—á–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ"))
    return keyboard

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_keyboard())

# üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏ –≤ YouTube Music —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ–º
@bot.message_handler(commands=['find'])
def find_music(message):
    query = message.text.replace('/find', '').strip()  

    if not query:
        bot.send_message(message.chat.id, "‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –ø–æ—Å–ª–µ /find")
        return

    bot.send_message(message.chat.id, f"üîç –ò—â—É: {query}...")

    try:
        search_results = ytmusic.search(query, filter="songs", limit=10)  # –£–≤–µ–ª–∏—á–∏–ª–∏ –¥–æ 10 —Ç—Ä–µ–∫–æ–≤

        if not search_results:
            bot.send_message(message.chat.id, "‚ö†Ô∏è –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!")
            return

        # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ç—Ä–µ–∫
        first_song = search_results[0]
        title = first_song['title']
        artist = first_song['artists'][0]['name']
        video_id = first_song.get('videoId')

        if not video_id:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∏–¥–µ–æ ID.")
            return

        youtube_url = f"https://music.youtube.com/watch?v={video_id}"
        bot.send_message(message.chat.id, f"üé∂ –ù–∞—à—ë–ª: {title} - {artist}\n‚è≥ –ó–∞–≥—Ä—É–∂–∞—é...")

        # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º—É–∑—ã–∫—É
        filepath = download_audio(youtube_url)

        if filepath and os.path.exists(filepath):
            with open(filepath, 'rb') as audio:
                bot.send_audio(message.chat.id, audio)
            os.remove(filepath)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        else:
            bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ.")

    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")

# üì• –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –º—É–∑—ã–∫–∏ –∏–∑ YouTube –ø–æ —Å—Å—ã–ª–∫–µ
@bot.message_handler(func=lambda message: "youtube.com" in message.text or "youtu.be" in message.text or "music.youtube.com" in message.text)
def send_audio(message):
    bot.reply_to(message, "üéµ –ó–∞–≥—Ä—É–∂–∞—é –º—É–∑—ã–∫—É, –ø–æ–¥–æ–∂–¥–∏ 1-2 –º–∏–Ω—É—Ç—ã...")
    try:
        filepath = download_audio(message.text)
        if filepath and os.path.exists(filepath):  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–∞—á–∞–ª—Å—è –ª–∏ —Ñ–∞–π–ª
            with open(filepath, 'rb') as audio:
                bot.send_audio(message.chat.id, audio)
            os.remove(filepath)  # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        else:
            bot.reply_to(message, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥—É—é —Å—Å—ã–ª–∫—É.")
    except Exception as e:
        bot.reply_to(message, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

# üõ† –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏
@bot.message_handler(func=lambda message: message.text == "üîç –ù–∞–π—Ç–∏ –º—É–∑—ã–∫—É")
def handle_find_button(message):
    bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –ø–æ—Å–ª–µ /find")

@bot.message_handler(func=lambda message: message.text == "üéµ –°–∫–∞—á–∞—Ç—å –ø–æ —Å—Å—ã–ª–∫–µ")
def handle_download_button(message):
    bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube")

# üõ† –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def handle_all_messages(message):
    try:
        bot.reply_to(message, "–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É üòï\n–ü–æ–ø—Ä–æ–±—É–π:\n‚úÖ /find [–Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏] ‚Äî –Ω–∞–π—Ç–∏ –º—É–∑—ã–∫—É\n‚úÖ –û—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ YouTube ‚Äî —è –∑–∞–≥—Ä—É–∂—É —Ç—Ä–µ–∫!", reply_markup=main_keyboard())
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

# üîÑ –ê–≤—Ç–æ–ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –ø—Ä–∏ —Å–±–æ–µ
while True:
    try:
        print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –∂–¥—ë—Ç –∫–æ–º–∞–Ω–¥—ã!")
        bot.polling(none_stop=True, timeout=60)
    except Exception as e:
        print(f"‚ö†Ô∏è –°–±–æ–π –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞: {e}")
        time.sleep(5)  # –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–º
